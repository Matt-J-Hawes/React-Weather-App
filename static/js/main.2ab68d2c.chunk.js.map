{"version":3,"sources":["components/Header.js","images/clouds.png","images/sun.png","images/drizzle.png","images/snow.png","components/Temperature.js","components/Toggle.js","components/Loading.js","images/umbrella.png","components/Error.js","apiKey/config.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Temperature","props","tempCelcius","tempFahrenheit","celciusMax","celciusMin","fahreMin","fahreMax","desc","wind","city","initialValue","React","useState","value","setValue","toggle","useCallback","v","useToggle","isOn","toggleIsOn","onClick","includes","src","clouds","alt","drizzle","snow","sun","Loading","ErrorMessage","Umbrella","apiKey","App","state","weather","loading","errorMessage","this","getWeather","name","setState","axios","get","then","res","Number","parseFloat","data","main","temp","toFixed","temp_max","temp_min","speed","catch","error","message","e","preventDefault","newPlace","onSubmit","getNewDestination","ref","input","type","placeholder","Error","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ab68d2c.chunk.js","sourcesContent":["//DEPENDENCIES\nimport React from 'react';\n\nconst Header = () => {\n\treturn (\n\t\t<div className =\"container\">\n\t\t   <h1>Weather App</h1>\n\t\t</div>\n\t);\n};\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/clouds.2ddbb531.png\";","export default __webpack_public_path__ + \"static/media/sun.f0545f5a.png\";","export default __webpack_public_path__ + \"static/media/drizzle.388a6a1a.png\";","export default __webpack_public_path__ + \"static/media/snow.6cbdeaf1.png\";","//DEPENDENCIES\nimport React from 'react';\n\n//COMPONENTS\nimport useToggle from './Toggle'\n\n//WEATHER IMAGES\nimport clouds from '../images/clouds.png';\nimport sun from '../images/sun.png';\nimport drizzle from '../images/drizzle.png';\nimport snow from '../images/snow.png'\n\nconst Temperature = (props) => {\n    const tempCelcius = props.tempCelcius\n    const tempFahrenheit = props.tempFahrenheit\n    const celciusMax = props.celciusMax\n    const celciusMin = props.celciusMin\n    const fahreMin = props.fahreMin\n    const fahreMax = props.fahreMax\n    const desc = props.desc\n    const wind = props.wind\n    const city = props.city\n    //Call useToggle function to switch between °C & °F\n    const [isOn, toggleIsOn] = useToggle();\n\n\treturn(\n       <div className = \"weather_container\">\n       <h3>{city}</h3>\n       <p className = \"description\">({desc})</p>\n         <div onClick = {toggleIsOn} >\n       \t     {isOn ? \n       \t     \t<h2>{tempCelcius}°C<span className = 'degrees'>|°F</span></h2> : \n       \t     \t<h2>{tempFahrenheit}°F <span className = 'degrees'>|°C</span></h2>}\n       \t </div>\n       \t     {isOn ? \n                <p className = \"min_max\">{celciusMin}°C / {celciusMax}°C</p> :\n                <p className = \"min_max\">{fahreMin}°F / {fahreMax}°F</p>\n       \t     }\n       \t <div className = \"weather_images\">\n\t       \t {desc.includes('Clouds')  ? \n\t       \t <img className = \"clouds\" src={clouds} alt=\"clouds\"/> \n\t       \t : null }\n\t       \t {desc.includes('Drizzle') || desc.includes('Rain') ? \n             <img className = \"clouds\" src={drizzle} alt=\"drizzle\"/>\n\t       \t : null }\n\t       \t {desc.includes('Snow') ? \n             <img className = \"clouds\" src={snow} alt=\"drizzle\"/>\n\t       \t : null }\n\t       \t {tempCelcius >= 20 ? \n\t       \t <img src={sun} alt=\"sun\" />\n\t       \t : null }\n       \t </div>\n       \t   <hr/>\n       \t   <p>The current wind speed in <span> {city} </span> is <span>{wind} mph </span></p>\n       </div>\n\t);\n};\n\nexport default Temperature;","//DEPENDENCIES\nimport React from 'react';\n\nexport default function useToggle(initialValue = true) {\n\t  const [value, setValue] = React.useState(initialValue);\n\t  const toggle = React.useCallback(() => {\n\t    setValue(v => !v);\n\t  }, []);\n\n  return [value, toggle];\n}","//DEPENDENCIES\nimport React from 'react';\n\nconst Loading = () => {\n\treturn(\n\t\t<div className = \"loading\">\n\t\t\t<div className=\"loader\"></div>\n\t    </div>\n\t);\n};\n\nexport default Loading","export default __webpack_public_path__ + \"static/media/umbrella.dfaeb824.png\";","import React from 'react';\nimport Umbrella from '../images/umbrella.png'\n\nconst ErrorMessage = () => {\n\treturn(\n\t\t<div className = \"error\">\n\t\t  <p className = \"error_p\">We could not find that location! Please try again...</p>\n\t\t  <hr />\n\t\t <img className = \"error_img\" src={Umbrella} alt = 'Not Found'/>\n\t\t</div>\n\t);\n};\n\nexport default ErrorMessage","const apiKey = 'bccf47493d7dac93fd10a706918373a6'\nexport default apiKey","//DEPENDENCIES\nimport React, {Component} from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n//NECESSARY COMPONENTS\nimport Header from './components/Header';\nimport Temperature from './components/Temperature';\nimport Loading from './components/Loading';\nimport ErrorMessage from './components/Error'\nimport apiKey from './apiKey/config';\n\nclass App extends Component {\n\n    state = {\n    \ttempCelcius: [],\n    \ttempFahrenheit: [],\n    \tcelciusMax: [],\n    \tcelciusMin: [],\n    \tfahreMin: [],\n    \tfahreMax: [],\n    \twind: [],\n    \tweather: [],\n    \tcity: '',\n    \tloading: true,\n    \terrorMessage: ''\n    }\n\n    componentDidMount(){\n    \tthis.getWeather()\n    }\n    \n    //Use 'axios' to retrieve data from weather api \n    getWeather(name = 'london'){\n    \tthis.setState({loading: true}, () => {\n\t\t    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${name}&appid=${apiKey}`)\n\t\t      .then(res => \n\t              this.setState({\n\t              \t  tempCelcius: Number.parseFloat(res.data.main.temp - 273.15).toFixed(1),\n\t              \t  tempFahrenheit: Number.parseFloat((res.data.main.temp - 273.15) * 9/5 + 32).toFixed(1),\n\t              \t  celciusMax: Number.parseFloat(res.data.main.temp_max - 273.15).toFixed(1),\n\t              \t  celciusMin: Number.parseFloat(res.data.main.temp_min - 273.15).toFixed(1),\n\t              \t  fahreMax:  Number.parseFloat((res.data.main.temp_max - 273.15) * 9/5 + 32).toFixed(1),\n\t              \t  fahreMin:  Number.parseFloat((res.data.main.temp_min - 273.15) * 9/5 + 32).toFixed(1),\n\t              \t  wind: res.data.wind.speed,\n\t              \t  weather: res.data.weather[0].main,\n\t              \t  city: res.data.name,\n\t              \t  loading: false,\n\t              \t  errorMessage: ''\n\t            })\n\t\t    )\n\t\t      .catch(error => this.setState({errorMessage: error.message, loading: false}))\n\t\t });\n\t};\n\n    /* Dynamic Search feature - take user input &\n    callback 'getWeather' function to generate new results */\n\tgetNewDestination(e){\n\t\te.preventDefault()\n\t\tconst newPlace = this.newPlace.value\n\t\t\tif(newPlace !== ''){\n\t\t\t\tthis.getWeather(newPlace)\n\t\t\t};\n\t\tthis.newPlace.value = ''\n\t};\n\n\trender(){\n\t  return (\n\t    <div className=\"App\">\n\t      <Header />\n\t      <form onSubmit= {e => this.getNewDestination(e)}>\n\t      \t<input ref = {input => this.newPlace = input} type=\"text\" placeholder=\"Amsterdam...\"></input>\n\t      \t<button onClick= {e => this.getNewDestination(e)}>&#x1F50D;</button>\n\t      </form>\n\t      {this.state.errorMessage ? <ErrorMessage /> : null}\n\t      {this.state.loading ? <Loading /> : null}\n\t      {!this.state.loading && !this.state.errorMessage ?\n\t\t      <Temperature \n\t\t         tempCelcius = {this.state.tempCelcius}\n\t\t         tempFahrenheit = {this.state.tempFahrenheit}\n\t\t         celciusMin = {this.state.celciusMin}\n\t\t         celciusMax = {this.state.celciusMax}\n\t\t         fahreMin = {this.state.fahreMin}\n\t\t         fahreMax = {this.state.fahreMax}\n\t\t         desc = {this.state.weather}\n\t\t         wind = {this.state.wind}\n\t\t         city = {this.state.city}\n\t\t      />\n\t\t      : null\n\t\t  }\n\t    </div>\n\t  );\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}